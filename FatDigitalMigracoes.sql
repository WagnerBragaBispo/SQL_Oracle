"black list" Fatura Digital U92039197.AFETADO_BATCH_BOW;

SELECT * FROM DWH.BI_DIM_MOTIVO_ATENDIMENTO WHERE upper(DSC_MOTIVO_ATEND_NIVEL_1||' '||dsc_motivo_atend_nivel_2 ||' '|| dsc_motivo_atend_nivel_3 ||' '|| cod_motivo_atend_nivel_4 ||' '|| cod_motivo_atend_nivel_5) LIKE '%DIGITAL%';



/* --------------------------------------------------------------------------------------------------------
 ETAPA 1 - CLIENTES CADASTRO E DESCADASTRADO PELO MINHA CLARO MÓVEL
-----------------------------------------------------------------------------------------------------------*/
---- DW_METODO_CONTATO in(701,791)
DROP TABLE FI_CADASTRO_P1;
CREATE TABLE FI_CADASTRO_P1 COMPRESS FOR QUERY HIGH PARALLEL 256 NOLOGGING AS
/*WITH 
FI_CADASTRO_P1 AS (*/
 SELECT /*+PARALLEL (32)*/
    SUBSTR(TO_CHAR(A.DAT_INICIO_ATENDIMENTO, 'YYYYMMDD'),1,6) AS SAFRA --ok
	,TO_CHAR(A.NUM_NTC ||' '||TO_CHAR((A.DAT_CRIACAO_DW)+1, 'YYYYMMDD')) AS SK_ACESSO
    ,TO_DATE(TO_CHAR(A.DAT_INICIO_ATENDIMENTO, 'RRRRMMDD')||' '||A.HOR_INICIO_ATENDIMENTO,'RRRRMMDD HH24MISS') AS DAT_INI_ATENDIMENTO
    ,A.DAT_CRIACAO_DW
    ,A.DW_NUM_NTC
	,A.NUM_NTC
    ,A.DW_AREA
    ,A.DW_METODO_CONTATO
    ,A.DW_MOTIVO_ATENDIMENTO
    ,B.DSC_METODO_CONTATO
  --,A.DSC_OBSERVACAO_ATENDIMENTO 
    ,CASE WHEN A.NUM_CPF IN (-3) THEN A.NUM_CNPJ ELSE A.NUM_CPF END AS NUM_CPF_CNPJ
    ,CASE WHEN A.DSC_OBSERVACAO_ATENDIMENTO LIKE '%cadastramento no Fatura Digital%' OR A.DSC_OBSERVACAO_ATENDIMENTO LIKE '%Adicionado contato no Fatura Digital%' THEN 'CADASTRADO FATURA DIGITAL'
          WHEN A.DSC_OBSERVACAO_ATENDIMENTO LIKE '%descadastramento do Fatura Digital%' THEN 'DESCADASTRADO FATURA DIGITAL'  ELSE 'OUTROS' END AS DSC_CAD_FD
    ,CASE WHEN A.DSC_OBSERVACAO_ATENDIMENTO LIKE '%cadastramento no Fatura Digital%' OR A.DSC_OBSERVACAO_ATENDIMENTO LIKE '%Adicionado contato no Fatura Digital%' THEN 1
          WHEN A.DSC_OBSERVACAO_ATENDIMENTO LIKE '%descadastramento do Fatura Digital%' THEN 0  ELSE 99 END AS FLG_CAD_FD      
    
      FROM DWH.BI_FP_ASSINANTE_ATEND_FECHADO A
 LEFT JOIN DWH.BI_DIM_METODO_CONTATO B    ON A.DW_METODO_CONTATO = B.DW_METODO_CONTATO
  WHERE A.DAT_CRIACAO_DW BETWEEN TO_DATE(20191231, 'RRRRMMDD') AND  TO_DATE(20200630, 'RRRRMMDD') 
  AND A.DW_METODO_CONTATO in (701,791)
  AND 
    (A.DSC_OBSERVACAO_ATENDIMENTO LIKE '%cadastramento no Fatura Digital%'
    OR A.DSC_OBSERVACAO_ATENDIMENTO LIKE '%descadastramento do Fatura Digital%'
    OR A.DSC_OBSERVACAO_ATENDIMENTO LIKE '%Adicionado contato no Fatura Digital%')
; 
/* --------------------------------------------------------------------------------------------------------
 ETAPA 1 - RESUMO --> TRANSACOES REALIZADAS ATÉ O DIA 26/06/2020
-----------------------------------------------------------------------------------------------------------*/
SELECT 
  SAFRA
   , dsc_cad_fd
  , dsc_metodo_contato
  ,DAT_INI_ATENDIMENTO
  ,COUNT(distinct(dw_num_ntc)) as QT_UU
  , count(*) AS QT_TRANSACOES
FROM FI_CADASTRO_P1 
WHERE DW_METODO_CONTATO IN (701,791)
GROUP BY SAFRA
  , dsc_cad_fd
  , dsc_metodo_contato
  ,DAT_INI_ATENDIMENTO;

SELECT MAX(DAT_CRIACAO_DW) AS DAT_CRIACAO_DW FROM FI_CADASTRO_P1 WHERE DW_METODO_CONTATO IN (701,791); 
/*--------------------------------------------------------------------------------------------------------
 ETAPA 2 - CLIENTES CADASTRO PELO WHATSAPP CLARO MÓVEL
-----------------------------------------------------------------------------------------------------------*/
DROP TABLE FI_CADASTRO_P2;
CREATE TABLE FI_CADASTRO_P2 COMPRESS FOR QUERY HIGH PARALLEL 256 NOLOGGING AS
SELECT /*+PARALLEL (32)*/
   SUBSTR(TO_CHAR(A.DAT_CRIACAO_DW, 'YYYYMMDD'),1,6) AS SAFRA --ok
   ,TO_CHAR(A.NUM_NTC ||' '||TO_CHAR((A.DAT_CRIACAO_DW)+1, 'YYYYMMDD')) AS SK_ACESSO
	,A.DAT_REFERENCIA
	,A.DAT_CRIACAO_DW
	,A.DW_NUM_NTC
	,A.COD_PLATAFORMA
	,A.DW_NUM_CANAL_MINT
	,A.NUM_NTC
	,A.NUM_PROTOCOLO
	,A.COD_ATENDIMENTO
	,A.COD_SHORT_CODE
	,'WhatsApp' AS DSC_METODO_CONTATO
  ,C.DSC_NOS_MINT
  ,'CADASTRADO FATURA DIGITAL' AS DSC_CAD_FD
FROM DWH.BI_FP_ATENDIMENTO_MINT A
LEFT JOIN DWH.BI_FP_NAVEGACAO_MINT B ON A.COD_ATENDIMENTO = B.COD_ATENDIMENTO AND A.DAT_REFERENCIA = B.DAT_REFERENCIA
LEFT JOIN DWH.BI_DIM_NOS_MINT c ON b.DW_NOS_MINT = C.DW_NOS_MINT
WHERE A.COD_SHORT_CODE = 9652 --- SHORT CODE DO WHATSAPP
  AND A.DAT_REFERENCIA BETWEEN TO_DATE(20200101, 'RRRRMMDD') AND  TO_DATE(20200630, 'RRRRMMDD')
  AND B.DAT_REFERENCIA BETWEEN TO_DATE(20200101, 'RRRRMMDD') AND  TO_DATE(20200630, 'RRRRMMDD')
  AND A.NUM_PROTOCOLO IS NOT NULL
  AND B.DW_NOS_MINT = 5896 --noAtalho_ADICIONA_CLIENTE_WHATS_FAT_DIGITAL
 -- AND A.NUM_NTC = '63992458289'
 ;

/* --------------------------------------------------------------------------------------------------------
 ETAPA 1 - RESUMO --> TRANSACOES REALIZADAS ATÉ O DIA 26/06/2020
-----------------------------------------------------------------------------------------------------------*/
SELECT SAFRA ,dsc_cad_fd ,dsc_metodo_contato ,COUNT(distinct(dw_num_ntc)) as QT_UU ,count(*) AS QT_TRANSACOES FROM FI_CADASTRO_P2 GROUP BY SAFRA ,dsc_cad_fd ,dsc_metodo_contato;
SELECT MAX(DAT_CRIACAO_DW) as DAT_CRIACAO_DW FROM FI_CADASTRO_P2 ; ---> 26/06/20
 
 
 -- AND A.NUM_NTC = '63992458289'
 --AND A.NUM_NTC = '11960208448';
  --NTC 63992458289 ADESÃO DIA 24/06/2020
/*DWH.BI_DIM_NOS_MINT
DW_NOS_MINT		DSC_NOS_MINT
5896	    	noAtalho_ADICIONA_CLIENTE_WHATS_FAT_DIGITAL

NÓS QUE POSSUEM TRANSAÇÕES DO WHATSAPP
AND B.DW_NOS_MINT IN(5900,5841,5845,5846,5849,5850,5851,5852,5853,5854,5856,5864,5865,5866,5867,5868,5869,5870,5871,5872,5875,5887,5891,5896,5898,5899,5901,5929,5946,5953,5954,5955)
*/

/*--------------------------------------------------------------------------------------------------------
 ETAPA 3 - BASE DE CADASTRO ---> ATUALIZAÇÃO DO CADASTRO
-----------------------------------------------------------------------------------------------------------*/
DROP TABLE FI_CADASTRO_P3;
CREATE TABLE FI_CADASTRO_P3 COMPRESS FOR QUERY HIGH PARALLEL 256 NOLOGGING AS
/*FI_CADASTRO_P3 AS (*/

SELECT /*+PARALLEL (32)*/ DISTINCT
    SUBSTR(TO_CHAR(CTA.DAT_ATUALIZACAO_DW, 'YYYYMMDD'),1,6) AS SAFRA
	,TO_CHAR(FAT.NUM_NTC ||' '||TO_CHAR(CTA.DAT_ATUALIZACAO_DW, 'YYYYMMDD')) AS SK_ACESSO
	,CTA.DAT_ATUALIZACAO_DW 
    ,CTA.DW_NUM_CONTA_CLI
    ,CTA.NUM_CONTA_CLI
    ,CTA.DW_NUM_CLIENTE
    ,CTA.NUM_CLIENTE
    ,CTA.NUM_CPF
    ,CTA.NUM_CNPJ
    ,CASE WHEN CTA.NUM_CPF IN (-3) THEN CTA.NUM_CNPJ ELSE CTA.NUM_CPF END AS NUM_CPF_CNPJ
    ,CTA.COD_STS_ATU
    ,CTA.IND_IMPRIME_CONTA
    ,CTA.SGL_ESTADO
    ,FAT.DW_NUM_NTC
    ,FAT.NUM_NTC

FROM DWH.BI_DIM_DOC_CONTA CTA
LEFT JOIN DWH.BI_FP_RECEITA_FATURA_DET FAT ON CTA.DW_NUM_DOC_CONTA = FAT.DW_NUM_DOC_CONTA
  WHERE CTA.DAT_ATUALIZACAO_DW BETWEEN TO_DATE(20200101, 'RRRRMMDD') AND  TO_DATE(20200630, 'RRRRMMDD') ---> PERÍODO DA ATUALIZAÇÃO DO CADASTRO
        AND FAT.DAT_CRIACAO_DW BETWEEN TO_DATE(20191201, 'RRRRMMDD') AND  TO_DATE(20200630, 'RRRRMMDD') ---> PERÍODO DA CRIAÇÃO DA FATURA
;

/*--------------------------------------------------------------------------------------------------------
 ETAPA 3.1 - BASE CADASTRAL POR REGIÃO
-----------------------------------------------------------------------------------------------------------*/
SELECT /*+PARALLEL (32)*/ DISTINCT
    SUBSTR(TO_CHAR(CTA.DAT_ATUALIZACAO_DW, 'YYYYMMDD'),1,6) AS SAFRA
	,CTA.COD_STS_ATU
    ,CTA.SGL_ESTADO
	,CTA.IND_IMPRIME_CONTA
    ,COUNT(DISTINCT(CTA.DW_NUM_CONTA_CLI)) AS QT_CONTAS
	,COUNT(*) AS QT_TRANSACOES
FROM DWH.BI_DIM_DOC_CONTA CTA
  WHERE CTA.DAT_ATUALIZACAO_DW BETWEEN TO_DATE(20200101, 'RRRRMMDD') AND  TO_DATE(20200630, 'RRRRMMDD') ---> PERÍODO DA ATUALIZAÇÃO DO CADASTRO
 GROUP BY SUBSTR(TO_CHAR(CTA.DAT_ATUALIZACAO_DW, 'YYYYMMDD'),1,6)
	,CTA.COD_STS_ATU
    ,CTA.SGL_ESTADO
	,CTA.IND_IMPRIME_CONTA
;

/*--------------------------------------------------------------------------------------------------------
 ETAPA 4 - cROSS - ORIGEM DO CADASTRO
-----------------------------------------------------------------------------------------------------------*/
SELECT /*+PARALLEL (32)*/ DISTINCT
	CTA.SAFRA
	,CTA.COD_STS_ATU
    ,CTA.SGL_ESTADO
	,CTA.IND_IMPRIME_CONTA
	,CASE 
		  WHEN MCM.SK_ACESSO = CTA.SK_ACESSO 		 	THEN MCM.DSC_METODO_CONTATO
		  WHEN WPP.SK_ACESSO = CTA.SK_ACESSO 			THEN WPP.DSC_METODO_CONTATO
		  ELSE 'Outros Canais' END AS ORIGEM_CADASTRO
	,CASE 
		  WHEN MCM.SK_ACESSO = CTA.SK_ACESSO 		 	THEN MCM.DSC_CAD_FD
		  WHEN WPP.SK_ACESSO = CTA.SK_ACESSO 			THEN WPP.DSC_CAD_FD
		  ELSE 'N/A' END AS DSC_CANAL_DIGITAL
	,COUNT(DISTINCT(CTA.DW_NUM_CONTA_CLI)) AS QT_CONTAS
	,COUNT(DISTINCT(CTA.NUM_NTC)) AS QT_UU

	 FROM FI_CADASTRO_P3 CTA
LEFT JOIN FI_CADASTRO_P1 MCM ON MCM.SK_ACESSO = CAT.SK_ACESSO 
LEFT JOIN FI_CADASTRO_P2 WPP ON WPP.SK_ACESSO = CAT.SK_ACESSO 

WHERE CTA.NUM_NTC NOT IN ('-3','-2','-1') AND CTA.COD_STS_ATU IN ('O', 'N')
GROUP BY CAT.SAFRA
		,CTA.COD_STS_ATU
		,CTA.SGL_ESTADO
		,CTA.IND_IMPRIME_CONTA
		,CASE 
		  WHEN MCM.SK_ACESSO = CTA.SK_ACESSO 		 	THEN MCM.DSC_METODO_CONTATO
		  WHEN WPP.SK_ACESSO = CTA.SK_ACESSO 			THEN WPP.DSC_METODO_CONTATO
		  ELSE 'Outros Canais' END
		,CASE 
		  WHEN MCM.SK_ACESSO = CTA.SK_ACESSO 		 	THEN MCM.DSC_CAD_FD
		  WHEN WPP.SK_ACESSO = CTA.SK_ACESSO 			THEN WPP.DSC_CAD_FD
		  ELSE 'N/A' END
;

/*--------------------------------------------------------------------------------------------------------
 ETAPA 5 - CROSS AS CONTAS QUE TIVERAM MOVIMENTAÇÕES COM A ORIGEM (ACOMPANHAMENTO DE 03 DIAS DE MOVIMENTAÇÕES)
-----------------------------------------------------------------------------------------------------------*/
WITH

FI_CADASTRO_P4 AS (

SELECT /*+PARALLEL (32)*/ 
  SUBSTR(TO_CHAR(MOV.DAT_CRIACAO_FT, 'YYYYMMDD'),1,6) AS SAFRA
	,TO_CHAR(NVL(CTA.NUM_NTC,'-3') ||' '||TO_CHAR(MOV.DAT_ATUALIZACAO_DW, 'YYYYMMDD')) AS SK_ACESSO
  ,MOV.DAT_ATUALIZACAO_DW
  ,MOV.DAT_CRIACAO_FT
    ,MOV.DW_NUM_CONTA_CLI
    ,MOV.NUM_CONTA_CLI
    ,MOV.DW_NUM_CLIENTE
    ,MOV.NUM_CLIENTE
    ,MOV.NUM_CPF
    ,MOV.NUM_CNPJ
    ,CASE WHEN MOV.NUM_CPF IN (-3) THEN MOV.NUM_CNPJ ELSE MOV.NUM_CPF END AS NUM_CPF_CNPJ
    ,NVL(CTA.DW_NUM_NTC,'-3') AS DW_NUM_NTC
    ,NVL(CTA.NUM_NTC,'-3') AS NUM_NTC
    ,MOV.COD_STS_ATU
    ,MOV.IND_IMPRIME_CONTA AS IND_IMPRIME_CONTA_ANT
    ,CASE WHEN FT.DW_NUM_CONTA_CLI IS NULL THEN '-3' ELSE FT.IND_IMPRIME_CONTA END AS IND_IMPRIME_CONTA_ATU
    ,MOV.SGL_ESTADO
    ,CASE 
		  WHEN MCM.SK_ACESSO = TO_CHAR(NVL(CTA.NUM_NTC,'-3') ||' '||TO_CHAR(MOV.DAT_ATUALIZACAO_DW, 'YYYYMMDD')) 		 	THEN MCM.DSC_METODO_CONTATO
		  WHEN WPP.SK_ACESSO = TO_CHAR(NVL(CTA.NUM_NTC,'-3') ||' '||TO_CHAR(MOV.DAT_ATUALIZACAO_DW, 'YYYYMMDD')) 			THEN WPP.DSC_METODO_CONTATO
		  ELSE 'Outros Canais' END AS ORIGEM_CADASTRO
	,CASE 
		  WHEN MCM.SK_ACESSO = TO_CHAR(NVL(CTA.NUM_NTC,'-3') ||' '||TO_CHAR(MOV.DAT_ATUALIZACAO_DW, 'YYYYMMDD')) 		 	THEN MCM.DSC_CAD_FD
		  WHEN WPP.SK_ACESSO = TO_CHAR(NVL(CTA.NUM_NTC,'-3') ||' '||TO_CHAR(MOV.DAT_ATUALIZACAO_DW, 'YYYYMMDD')) 			THEN WPP.DSC_CAD_FD
		  ELSE 'N/A' END AS DSC_CANAL_DIGITAL
   
FROM U92047747.BI_DIM_DOC_CONTA_MOV MOV
LEFT JOIN DWH.BI_DIM_DOC_CONTA FT ON MOV.DW_NUM_CONTA_CLI = FT.DW_NUM_CONTA_CLI
LEFT JOIN FI_CADASTRO_P3 CTA ON MOV.DW_NUM_CONTA_CLI = CTA.DW_NUM_CONTA_CLI
LEFT JOIN FI_CADASTRO_P1 MCM ON MCM.SK_ACESSO = TO_CHAR(NVL(CTA.NUM_NTC,'-3') ||' '||TO_CHAR(MOV.DAT_ATUALIZACAO_DW, 'YYYYMMDD'))
LEFT JOIN FI_CADASTRO_P2 WPP ON WPP.SK_ACESSO = TO_CHAR(NVL(CTA.NUM_NTC,'-3') ||' '||TO_CHAR(MOV.DAT_ATUALIZACAO_DW, 'YYYYMMDD'))

WHERE MOV.DSC_STATUS_MOV_CAD = 'A'  
/*  AND
    CASE 
		  WHEN MCM.SK_ACESSO = TO_CHAR(NVL(CTA.NUM_NTC,'-3') ||' '||TO_CHAR(MOV.DAT_ATUALIZACAO_DW, 'YYYYMMDD')) 		 	THEN MCM.DSC_METODO_CONTATO
		  WHEN WPP.SK_ACESSO = TO_CHAR(NVL(CTA.NUM_NTC,'-3') ||' '||TO_CHAR(MOV.DAT_ATUALIZACAO_DW, 'YYYYMMDD')) 			THEN WPP.DSC_METODO_CONTATO
		  ELSE 'Outros Canais' END <>'Outros Canais'
  */
)
SELECT /*+PARALLEL (32)*/ DISTINCT
  SAFRA
  ,TRUNC(DAT_CRIACAO_FT) AS DAT_CRIACAO_FT
	---,COD_STS_ATU
	---,SGL_ESTADO
	,IND_IMPRIME_CONTA_ATU
  ,IND_IMPRIME_CONTA_ANT
  ,ORIGEM_CADASTRO
  ,DSC_CANAL_DIGITAL
  ,COUNT(DISTINCT(DW_NUM_CONTA_CLI)) AS QT_CONTAS
	,COUNT(DISTINCT(NUM_NTC)) AS QT_UU

FROM FI_CADASTRO_P4
  WHERE COD_STS_ATU IN ('O', 'N') AND IND_IMPRIME_CONTA_ATU <> IND_IMPRIME_CONTA_ANT
GROUP BY SAFRA
		,TRUNC(DAT_CRIACAO_FT) 
		---,COD_STS_ATU
		---,SGL_ESTADO
		,IND_IMPRIME_CONTA_ATU
    ,IND_IMPRIME_CONTA_ANT
    ,ORIGEM_CADASTRO
  ,DSC_CANAL_DIGITAL
  ; 


-------------------------------------------------------------------------------------------RESUMO DAS MOVIMENTAÇÕES	
--FOTO DA BASE 
SELECT /*+PARALLEL (32)*/ DISTINCT  
  SUBSTR(TO_CHAR(DAT_CRIACAO, 'YYYYMMDD'),1,6) AS SAFRA
  ,TRUNC(DAT_CRIACAO) AS DAT_CRIACAO_FT
   ,IND_IMPRIME_CONTA 
  ,COUNT(DISTINCT(DW_NUM_CONTA_CLI)) AS QT_CONTAS 

FROM U92047747.BI_DIM_DOC_CONTA_FT 
WHERE COD_STS_ATU IN ('O', 'N') 
GROUP BY SUBSTR(TO_CHAR(DAT_CRIACAO, 'YYYYMMDD'),1,6) 
  ,TRUNC(DAT_CRIACAO)
   ,IND_IMPRIME_CONTA 
  ;


--BI_DIM_DOC_CONTA_MOV
--dat_criacao_ft 24/06/2020 A 26/06/2020
--dat_criacao 23/06/2020 A 25/06/2020 

--BI_DIM_DOC_CONTA_FT
--dat_criacao_ft 24/06/2020 A 26/06/2020
--dat_criacao 23/06/2020
SELECT /*+PARALLEL (32)*/ DISTINCT 
  SUBSTR(TO_CHAR(DAT_ATUALIZACAO_DW, 'YYYYMMDD'),1,6) AS SAFRA
  ,COD_STS_ATU 
  ,SGL_ESTADO	
  ,IND_IMPRIME_CONTA 
  ,COUNT(DISTINCT(DW_NUM_CONTA_CLI)) AS QT_CONTAS 
 FROM U92047747.BI_DIM_DOC_CONTA_MOV 
 WHERE COD_STS_ATU IN ('O', 'N')
 group by SUBSTR(TO_CHAR(DAT_ATUALIZACAO_DW, 'YYYYMMDD'),1,6)
          ,COD_STS_ATU 
          ,SGL_ESTADO	
          ,IND_IMPRIME_CONTA ; 
  
    
----VALIDAÇÃO
SELECT /*+PARALLEL (32)*/
	CTA.*
	,CASE 
		  WHEN MCM.SK_ACESSO = CTA.SK_ACESSO 		 	THEN MCM.DSC_METODO_CONTATO
		  WHEN WPP.SK_ACESSO = CTA.SK_ACESSO 			THEN WPP.DSC_METODO_CONTATO
		  ELSE 'Outros Canais' END AS ORIGEM_CADASTRO
	
FROM FI_CADASTRO_P3 CTA
LEFT JOIN FI_CADASTRO_P1 MCM ON MCM.SK_ACESSO = CTA.SK_ACESSO 
LEFT JOIN FI_CADASTRO_P2 WPP ON WPP.SK_ACESSO = CTA.SK_ACESSO 

WHERE CTA.NUM_NTC NOT IN ('-3','-2','-1') AND CTA.COD_STS_ATU IN ('O', 'N')
---AND WPP.SK_ACESSO IS NOT NULL
;
	
	
/* --------------------------------------------------------------------------------------------------------
FOTO TIRADA EM 24/06/2020 + 25/06/20202

MOVIMENTAÇÕES DA TABELA DWH.BI_DIM_DOC_CONTA;
-----------------------------------------------------------------------------------------------------------*/
--ETAPA 1 FOTO DA BASE DE CADASTRO
DROP TABLE BI_DIM_DOC_CONTA_FT;
CREATE TABLE BI_DIM_DOC_CONTA_FT COMPRESS FOR QUERY HIGH PARALLEL 256 NOLOGGING AS 
SELECT /*+ PARALLEL (32)*/
  A.*
  ,SYSDATE                       AS DAT_CRIACAO  
FROM DWH.BI_DIM_DOC_CONTA A 
WHERE 
	UPPER(A.COD_STS_ATU) IN ('N','O')
	AND ((A.IND_COMBO_MULTI = 'N') OR (A.IND_COMBO_MULTI IS NULL));
COMMIT;

--ETAPA 2 TRAZAER OS CLIENTES QUE FIZERAM MUDANÇA NO CADASTRO --> DSC_STATUS_MOV_CAD = A (HOUVE ALTERAÇÃO)
INSERT /*+APPEND */ INTO U92047747.BI_DIM_DOC_CONTA_MOV
SELECT /*+PARALLEL (32)*/  FT.* ,'A' AS DSC_STATUS_MOV_CAD ,SYSDATE AS DAT_CRIACAO_FT 
        FROM BI_DIM_DOC_CONTA_FT FT 
        INNER JOIN DWH.BI_DIM_DOC_CONTA DM ON FT.DW_NUM_CONTA_CLI = DM.DW_NUM_CONTA_CLI AND FT.IND_IMPRIME_CONTA <> DM.IND_IMPRIME_CONTA
COMMIT;
--SELECT UNIQUE DAT_CRIACAO_FT FROM U92047747.BI_DIM_DOC_CONTA_MOV;
/*
--ETAPA 3 TRAZAER OS CLIENTES ENTRARAM OU NOVOS DA BASE DE CADASTRO --> DSC_STATUS_MOV_CAD = E (ENTROU DO CADASTRO)
INSERT INTO U92047747.BI_DIM_DOC_CONTA_MOV
SELECT 
        DM.* 
        ,(SYSDATE)-1 AS DAT_CRIACAO 
        ,'E' AS DSC_STATUS_MOV_CAD 
        ,SYSDATE AS DAT_CRIACAO_FT 
      FROM DWH.BI_DIM_DOC_CONTA DM  
      LEFT JOIN BI_DIM_DOC_CONTA_FT FT ON FT.DW_NUM_CONTA_CLI = DM.DW_NUM_CONTA_CLI
       WHERE FT.DW_NUM_CONTA_CLI IS NULL; COMMIT;

--******************************NÃO INCIADO ETAPA 4 TRAZAER OS CLIENTES SAIRAM DA BASE DE CADASTRO --> DSC_STATUS_MOV_CAD = S (SAIU DO CADASTRO)****DOIS DIAS RODANDO E NÃO ENCONTREI ESTE CENÁRIO
INSERT  INTO U92047747.BI_DIM_DOC_CONTA_MOV
SELECT /*+PARALLEL (32)*/ FT.* ,'S' AS DSC_STATUS_MOV_CAD ,SYSDATE AS DAT_CRIACAO_FT 
        FROM BI_DIM_DOC_CONTA_FT FT  
        LEFT JOIN DWH.BI_DIM_DOC_CONTA DM ON FT.DW_NUM_CONTA_CLI = DM.DW_NUM_CONTA_CLI
        WHERE DM.DW_NUM_CONTA_CLI IS NULL; COMMIT;
		
*/


/* --------------------------------------------------------------------------------------------------------

				VALIDAÇÃO

-----------------------------------------------------------------------------------------------------------*/

SELECT /*+PARALLEL (32)*/
          
          MOV.DW_NUM_CONTA_CLI
          ,MOV.
          ,MOV.IND_IMPRIME_CONTA
          ,DIM.IND_IMPRIME_CONTA AS IND_IMPRIME_CONTA_ATU
          ,CASE WHEN DIM.IND_IMPRIME_CONTA = 8 THEN 1 ELSE 0 END AS FLG_MIG_FI
          /*,FAT.NUM_NTC
     		 ,FAT.COD_PLATAFORMA*/
  FROM U92047747.BI_DIM_DOC_CONTA_MOV MOV
  INNER JOIN DWH.BI_DIM_DOC_CONTA DIM
    ON DIM.DW_NUM_CONTA_CLI = MOV.DW_NUM_CONTA_CLI
    /*LEFT JOIN DWH.BI_FP_RECEITA_FATURA_DET FAT
      ON MOV.DW_NUM_CONTA_CLI = FAT.DW_NUM_CONTA_CLI*/
  WHERE UPPER(MOV.COD_STS_ATU) IN ('N','O');
  
  SELECT * FROM DWH.BI_FP_RECEITA_FATURA_DET FAT WHERE FAT.DW_NUM_CONTA_CLI = 867976532;
  SELECT * FROM DWH.BI_DIM_DOC_CONTA WHERE DW_NUM_CONTA_CLI = 867976532;
  SELECT * FROM DWH.BI_FP_ATENDIMENTO_MINT WHERE DW_NUM_NTC = 613295521; ---acesso AO MINT (WHATSAPP)
  SELECT * FROM DWH.BI_FP_ASSINANTE_ATEND_FECHADO A WHERE A.DAT_CRIACAO_DW BETWEEN TO_DATE(20200601, 'RRRRMMDD') AND  TO_DATE(20200630, 'RRRRMMDD') AND DW_NUM_NTC = 613295521 AND TO_CHAR(A.dsc_motivo_reclamacao) LIKE '%Fatura Digital%';
  SELECT * FROM U92047747.BI_DIM_DOC_CONTA_MOV WHERE DW_NUM_CONTA_CLI = 839954168;
  
  SELECT /*+PARALLEL (32)*/ 
        a.DW_NUM_NTC 
        ,a.NUM_NTC
        ,a.num_cnpj
        ,a.num_cpf
        ,a.DAT_CRIACAO_DW 
        ,a.DAT_FIM_ATENDIMENTO 
        ,a.DW_METODO_CONTATO 
FROM DWH.BI_FP_ASSINANTE_ATEND_FECHADO A
WHERE A.DAT_CRIACAO_DW BETWEEN TO_DATE(20200601, 'RRRRMMDD') AND  TO_DATE(20200630, 'RRRRMMDD') 
  -- and REGEXP_LIKE (A.dsc_motivo_reclamacao, '(*)Digital$')
    --AND DW_NUM_NTC = 613295521
    --AND A.DSC_OBSERVACAO_ATENDIMENTO LIKE '%Fatura Digital%'
    --AND A.DSC_OBSERVACAO_ATENDIMENTO LIKE '%descadastramento do Fatura Digital%'
    AND CONTAINS(A.DSC_OBSERVACAO_ATENDIMENTO, 'Fatura Digital'
    ;
 DW_NUM_NTC = 613295521 ---- DADOS ATENDIMENTO FECHADO TAMBÉM POSSUI NUN_NTC NUM_CPF
;
SELECT * FROM DWH.BI_DIM_MOTIVO_ATENDIMENTO WHERE upper(DSC_MOTIVO_ATEND_NIVEL_1||' '||dsc_motivo_atend_nivel_2 ||' '|| dsc_motivo_atend_nivel_3 ||' '|| cod_motivo_atend_nivel_4 ||' '|| cod_motivo_atend_nivel_5) CONTAINS '%IMPRESSA%';

SELECT /*+PARALLEL (32)*/ 
        a.DW_NUM_NTC 
        ,a.NUM_NTC
        ,a.num_cnpj
        ,a.num_cpf
        ,a.DAT_CRIACAO_DW 
        ,a.DAT_FIM_ATENDIMENTO 
        ,a.DW_METODO_CONTATO 
        ,mt.dsc_metodo_contato
        ,a.DW_MOTIVO_ATENDIMENTO
        /*,ma.DSC_MOTIVO_ATEND_NIVEL_1
        ,ma.DSC_MOTIVO_ATEND_NIVEL_2
        ,ma.DSC_MOTIVO_ATEND_NIVEL_3
        ,ma.DSC_MOTIVO_ATEND_NIVEL_4
        ,ma.DSC_MOTIVO_ATEND_NIVEL_5*/
        

FROM DWH.BI_FP_ASSINANTE_ATEND_FECHADO a 
INNER JOIN DWH.BI_DIM_METODO_CONTATO MT             ON A.DW_METODO_CONTATO = MT.DW_METODO_CONTATO
LEFT JOIN DWH.BI_DIM_MOTIVO_ATENDIMENTO MA          ON A.DW_MOTIVO_ATENDIMENTO = MA.DW_MOTIVO_ATENDIMENTO
WHERE A.DAT_INICIO_ATENDIMENTO BETWEEN TO_DATE(&DATA_INICIAL, 'RRRRMMDD') AND  TO_DATE(&DATA_FINAL, 'RRRRMMDD') 
  and a.dw_num_ntc = 613295521 
--AND UPPER(dsc_motivo_reclamacao) LIKE '%FATURA%DIGITAL'
order by a.DAT_FIM_ATENDIMENTO ;


--select * from DWH.BI_DIM_MOTIVO_ATENDIMENTO MA;



	/*EXEMPLOS 
    MIGROU DE WAPP(5) PARA NG(4)    : DW_NUM_CONTA_CLI = 867976532 NTC = 11994425796(canc) 11960208448(ativo) DW_NUM_NTC = 613295521
    MIGROU DE APP(7) PARA EMAIL(9) : DW_NUM_CONTA_CLI = 868325862
    */
    
WITH 
BASE1 AS
(
SELECT /*PARALELL (32)*/         
         SUBSTR(TO_CHAR(A.DAT_INICIO_ATENDIMENTO, 'RRRRMMDD'),1,6) AS SAFRA
         ,A.NUM_NTC
         ,A.DW_METODO_CONTATO
         ,MIN(TO_DATE(TO_CHAR(A.DAT_INICIO_ATENDIMENTO, 'RRRRMMDD')||' '||HOR_INICIO_ATENDIMENTO,'RRRRMMDD HH24MISS')) DT_PRI_ATEND
         ,HIS.COD_PLATAFORMA_ATU
         ,regexp_replace(TO_CHAR(MA.COD_MOTIVO_ATEND_NIVEL_1,'00000')||
                                  TO_CHAR(MA.COD_MOTIVO_ATEND_NIVEL_2,'00000')|| 
                                  TO_CHAR(MA.COD_MOTIVO_ATEND_NIVEL_3,'00000'),'[[:space:]]*','')||
                         (CASE WHEN MA.COD_MOTIVO_ATEND_NIVEL_4 = -3 THEN '00000' 
                               ELSE (regexp_replace(TO_CHAR(MA.COD_MOTIVO_ATEND_NIVEL_4,'00000'),'[[:space:]]*',''))END)||
                          (CASE WHEN MA.COD_MOTIVO_ATEND_NIVEL_5 = -3 THEN '00000' 
                                ELSE (regexp_replace(TO_CHAR(MA.COD_MOTIVO_ATEND_NIVEL_5,'00000'),'[[:space:]]*',''))END) 
                                     AS ID_MOTIVOS_TUPLA
          
                                                                

FROM DWH.BI_FP_ASSINANTE_ATEND_FECHADO A
INNER JOIN BI_DIM_METODO_CONTATO MT             ON A.DW_METODO_CONTATO = MT.DW_METODO_CONTATO
LEFT JOIN BI_DIM_MOTIVO_ATENDIMENTO MA          ON A.DW_MOTIVO_ATENDIMENTO = MA.DW_MOTIVO_ATENDIMENTO
LEFT JOIN BI_HIS_ASSINANTE HIS                  ON A.NUM_NTC = HIS.NUM_NTC 
                                                AND SUBSTR(TO_CHAR(A.DAT_INICIO_ATENDIMENTO,'RRRRMMDD'),1,6) = SUBSTR(TO_CHAR(HIS.DAT_MOVIMENTO,'RRRRMMDD'),1,6) 


     WHERE  /*A.DW_METODO_CONTATO IN (81, 411, 451,701) --EXPURGO 681 FLEX, 552 Minha Claro Empresa
     AND UPPER(A.DSC_OBSERVACAO_ATENDIMENTO) LIKE '%MINHACLAROWEB%AUTENTICA%USU%' ---SOMENTE ACESSO                                              
     AND */A.DAT_INICIO_ATENDIMENTO BETWEEN TO_DATE(&DATA_INICIAL, 'RRRRMMDD') AND  TO_DATE(&DATA_FINAL, 'RRRRMMDD') 
     AND HIS.DAT_MOVIMENTO BETWEEN TO_DATE(&DATA_INICIAL, 'RRRRMMDD') AND  TO_DATE(&DATA_FINAL, 'RRRRMMDD')
     AND A.NUM_NTC = 
     
 GROUP BY SUBSTR(TO_CHAR(A.DAT_INICIO_ATENDIMENTO, 'RRRRMMDD'),1,6) 
         ,A.NUM_NTC
         ,A.DW_METODO_CONTATO
         ,TO_DATE(TO_CHAR(A.DAT_INICIO_ATENDIMENTO, 'RRRRMMDD')||' '||HOR_INICIO_ATENDIMENTO,'RRRRMMDD HH24MISS')
         ,HIS.COD_PLATAFORMA_ATU
    
  SELECT /*+ PARALLEL (32)*/ ------------------------------------------------------------------------ETAPA 2 LIGACOES CR
       LAST_DAY(TO_DATE(FT.DT_INICIO_LIGACAO,'YYYY/MM/DD')) AS DAT_REFERENCIA       
       ,FT.DT_INICIO_LIGACAO SK_DATA       
       ,'CMV' AS NM_MARCA
       ,FT.SK_ATENDIMENTO_URA AS COD_CHAMADA -- CALL_ID
       ,TO_CHAR(FT.CD_NUMERO_TELEFONE ||' '||FT.DT_INICIO_LIGACAO ||' '||FT.NR_HORA_INICIO_LIGACAO) AS SK_LIGA
       ,TO_DATE(TO_DATE(FT.DT_INICIO_LIGACAO,'YYYY/MM/DD') ||' ' ||FT.NR_HORA_INICIO_LIGACAO,'DD/MM/RRRR HH24:MI:SS') AS DT_INI_LIGACAO
       ,TO_DATE(TO_DATE(FT.DT_FIM_LIGACAO,'YYYY/MM/DD') ||' ' ||FT.NR_HORA_FIM_LIGACAO,'DD/MM/RRRR HH24:MI:SS') AS DT_FIM_LIGACAO
       ,FT.CD_NUMERO_TELEFONE                           AS NUM_NTC
       ,CASE
         WHEN FT.FN_LIGACAO_IDENTIFICADA = 1 THEN
          'SIM'
         ELSE
          'NAO'
       END                                AS FLG_LIG_IDENTIFICADA
       ,STS.COD_SUB_STS_ATU DSC_STS_CLIENTE
       ,CASE
         WHEN FT.FN_CORPORATIVO = 1 THEN
          'SIM'
         ELSE
          'NAO'
       END                               AS FLG_CORPORATIVO
       ,CASE
         WHEN VA.NM_VISAO_ANALISE_BI = 'CONTACT RATE DIRECIONADO AO HUMANO' THEN
          'DIRECIONADO HUMANO'
         ELSE
          'RETIDO URA'
       END                           AS DSC_DIRECIONADO_RETIDO
       ,ATM.NM_TIPO_MOTIVO_BI         AS DSC_MOTIVO_URA
       ,STM.NM_SUB_TIPO_MOTIVO_BI     AS DSC_SUB_MOTIVO_URA
       ,ATL.NM_TIPO_LIGACAO_BI        AS DSC_EXPURGO_URA
       ,PP.DSC_PLANO_PRECO_BI         AS DSC_PLANO_CLIENTE
       ,SYSDATE                       AS DAT_CRIACAO

  FROM INTMKT.FT_ATENDIMENTO_URA FT -- OK
  LEFT JOIN DWH.BI_DIM_STATUS STS -- OK
    ON STS.STS_DW = FT.SK_STATUS
  LEFT JOIN INTMKT.DS_ATENDIMENTO_TIPO_MOTIVO ATM -- OK
    ON ATM.SK_ATENDIMENTO_TIPO_MOTIVO = FT.SK_ATENDIMENTO_TIPO_MOTIVO

  LEFT JOIN INTMKT.DS_ATENDIMENTO_TIPO_LIGACAO ATL -- OK
    ON ATL.SK_ATENDIMENTO_TIPO_LIGACAO = FT.SK_ATENDIMENTO_TIPO_LIGACAO
  LEFT JOIN DWH.BI_DIM_PLANO_PRECO PP -- OK
    ON PP.DW_PLANO = FT.SK_PLANO
  LEFT JOIN INTMKT.DS_ATENDIMENTO_SUB_TIPO_MOTIVO STM -- OK
   ON STM.SK_ATENDIMENTO_SUB_TIPO_MOTIVO =
       FT.SK_ATENDIMENTO_SUB_TIPO_MOTIVO
  LEFT JOIN INTMKT.DS_VISAO_ANALISE VA -- OK
    ON VA.SK_VISAO_ANALISE = FT.SK_VISAO_ANALISE
  LEFT JOIN intmkt.ds_atendimento_tipo_ligacao ATL 
ON        atl.sk_atendimento_tipo_ligacao = ft.sk_atendimento_tipo_ligacao 

WHERE FT.SK_DATA BETWEEN &DATA_INICIAL AND &DATA_FINAL 
  AND FT.CD_NUMERO_TELEFONE = 11960208448;

------------------------------------------------------MOTIVO FATURA DIGITAL

SELECT  /*+ PARALLEL (32)*/
       LAST_DAY(DAT_INICIO_ATENDIMENTO) AS DAT_REFERENCIA 
       ,TO_NUMBER(TO_CHAR(MC.DAT_INICIO_ATENDIMENTO, 'RRRRMMDD')) SK_DATA
       ,TO_DATE(TO_CHAR(MC.DAT_INICIO_ATENDIMENTO, 'RRRRMMDD')||' '||MC.HOR_INICIO_ATENDIMENTO,'RRRRMMDD HH24MISS') AS DAT_INI_ATENDIMENTO
       ,TO_DATE(TO_CHAR(MC.DAT_FIM_ATENDIMENTO, 'RRRRMMDD')||' '||MC.HOR_FIM_ATENDIMENTO,'RRRRMMDD HH24MISS') AS DAT_FIM_ATENDIMENTO
       ,MC.NUM_NTC
       ,MC.DW_METODO_CONTATO
       ,DM.DSC_METODO_CONTATO
       ,M.COD_MOTIVO_ATEND_NIVEL_1
       ,M.DSC_MOTIVO_ATEND_NIVEL_1
       ,M.COD_MOTIVO_ATEND_NIVEL_2
       ,M.DSC_MOTIVO_ATEND_NIVEL_2
       ,M.COD_MOTIVO_ATEND_NIVEL_3
       ,M.DSC_MOTIVO_ATEND_NIVEL_3
       ,M.COD_MOTIVO_ATEND_NIVEL_4
       ,M.DSC_MOTIVO_ATEND_NIVEL_4
       ,M.COD_MOTIVO_ATEND_NIVEL_5
       ,M.DSC_MOTIVO_ATEND_NIVEL_5
       ,SYSDATE AS DAT_CRIACAO    

FROM DWH.BI_FP_ASSINANTE_ATEND_FECHADO MC 
LEFT JOIN BI_DIM_MOTIVO_ATENDIMENTO M
     ON MC.DW_MOTIVO_ATENDIMENTO = M.DW_MOTIVO_ATENDIMENTO
LEFT JOIN BI_DIM_METODO_CONTATO DM
     ON MC.DW_METODO_CONTATO = DM.DW_METODO_CONTATO
WHERE MC.DW_METODO_CONTATO IN (81,411,451,701,709,791)  
---AND UPPER(MC.DSC_OBSERVACAO_ATENDIMENTO) LIKE '%MINHACLAROWEB%AUTENTICA%USU%'
  AND UPPER(M.DSC_MOTIVO_ATEND_NIVEL_5) LIKE '%DIGITAL%'
      AND MC.DAT_INICIO_ATENDIMENTO BETWEEN TO_DATE(20200601, 'RRRRMMDD') AND  TO_DATE(20200630, 'RRRRMMDD')









/* --------------------------------------------------------------------------------------------------------
FOTO TIRADA EM 23/06/2020

					WIHT
-----------------------------------------------------------------------------------------------------------*/


DROP TABLE BI_DIM_DOC_CONTA_FT;
CREATE TABLE BI_DIM_DOC_CONTA_FT COMPRESS FOR QUERY HIGH PARALLEL 256 NOLOGGING AS 
SELECT /*+ PARALLEL (32)*/
  A.*
  ,SYSDATE                       AS DAT_CRIACAO  
FROM DWH.BI_DIM_DOC_CONTA A 
WHERE 
	UPPER(A.COD_STS_ATU) IN ('N','O')
	AND ((A.IND_COMBO_MULTI = 'N') OR (A.IND_COMBO_MULTI IS NULL));
COMMIT;

WITH 
      BI_DIM_DOC_CONTA_S AS (
      SELECT /*+PARALLEL (32)*/ FT.* ,'S' AS DSC_STATUS_MOV_CAD ,SYSDATE AS DAT_CRIACAO_FT 
        FROM BI_DIM_DOC_CONTA_FT FT  
        LEFT JOIN DWH.BI_DIM_DOC_CONTA DM ON FT.DW_NUM_CONTA_CLI = DM.DW_NUM_CONTA_CLI
        WHERE DM.DW_NUM_CONTA_CLI IS NULL 
      ),
      
      BI_DIM_DOC_CONTA_A AS (
      SELECT /*+PARALLEL (32)*/  FT.* ,'A' AS DSC_STATUS_MOV_CAD ,SYSDATE AS DAT_CRIACAO_FT 
        FROM BI_DIM_DOC_CONTA_FT FT 
        INNER JOIN DWH.BI_DIM_DOC_CONTA DM ON FT.DW_NUM_CONTA_CLI = DM.DW_NUM_CONTA_CLI AND FT.IND_IMPRIME_CONTA <> DM.IND_IMPRIME_CONTA
      ),
      BI_DIM_DOC_CONTA_E AS (
      SELECT /*+PARALLEL (32)*/ FT.* ,'E' AS DSC_STATUS_MOV_CAD ,SYSDATE AS DAT_CRIACAO_FT 
        FROM BI_DIM_DOC_CONTA_FT FT 
        RIGHT JOIN DWH.BI_DIM_DOC_CONTA DM ON FT.DW_NUM_CONTA_CLI = DM.DW_NUM_CONTA_CLI
       WHERE FT.DW_NUM_CONTA_CLI IS NULL
      ),
      BI_DIM_DOC_CONTA_UNION AS (
      
        SELECT MOV1.* FROM BI_DIM_DOC_CONTA_S MOV1
        UNION ALL
        SELECT MOV2.* FROM BI_DIM_DOC_CONTA_E MOV2      
        UNION ALL
        SELECT MOV3.* FROM BI_DIM_DOC_CONTA_A MOV3      
      )
      CREATE TABLE BI_DIM_DOC_CONTA_MOV COMPRESS FOR QUERY HIGH PARALLEL 256 NOLOGGING AS 
      SELECT /*+PARALLEL (32)*/ MOV4.*  FROM BI_DIM_DOC_CONTA_UNION MOV4
      ;
      COMMIT ON BI_DIM_DOC_CONTA_MOV;
  




/*--------------------------------------------------------------------------------------------------------
PRIMEIRA ETAPA :  CRIACAO TABELA TEMPORÁRIA CONTENDO SOMENTE A FOTOGRAFIA DO MÊS DE ANÁLISE (FOTOGRAFIA)
---------------------------------------------------------------------------------------------------------*/
--ETAPA 1 FOTO FATURAMENTO DO MÊS 
DROP TABLE TMP_SQDAA_CMV_FAT_01;
CREATE TABLE TMP_SQDAA_CMV_FAT_01 COMPRESS FOR QUERY HIGH PARALLEL 256 NOLOGGING AS 
--CREATE TABLE TMP_SQDAA_CMV_FAT_01 AS
SELECT /*+ PARALLEL (32)*/
         DISTINCT B.NUM_NTC
     ,B.DW_NUM_CONTA_CLI
		 ,B.COD_PLATAFORMA
     ,LAST_DAY(TO_DATE('31/05/2020', 'DD/MM/RRRR')) AS DT_REFERENCIA
     ,LAST_DAY(TO_DATE(TO_CHAR(B.DAT_FATURA, 'RRRRMMDD'),'RRRRMMDD')) AS DAT_FATURA
     ,TO_CHAR(TO_DATE(TO_CHAR(B.DAT_FATURA, 'RRRRMMDD'),'RRRRMMDD'),'YYYYMM') AS SAFRA_VCTO         
 		 ,1                                                 AS M_0        
 
	  FROM DWH.BI_DIM_DOC_CONTA A 
 LEFT JOIN DWH.BI_FP_RECEITA_FATURA_DET B
		ON A.DW_NUM_CONTA_CLI = B.DW_NUM_CONTA_CLI
WHERE 
	UPPER(A.COD_STS_ATU) IN ('N','O')
	AND ((A.IND_COMBO_MULTI = 'N') OR (A.IND_COMBO_MULTI IS NULL))
  AND TO_DATE(B.DAT_FATURA,'DD/MM/RRRR') BETWEEN LAST_DAY(ADD_MONTHS(TO_DATE('31/05/2020', 'DD/MM/RRRR'),-1))+1
                                                        AND  
                                                        LAST_DAY(TO_DATE('31/05/2020', 'DD/MM/RRRR'));


------------------------------------------------------------------------------------------------------------------
/*--------------------------------------------------------------------------------------------------------
SEGUNDA ETAPA :  CRIACAO TABELA TEMPORÁRIA CONTENDO OS ACESSOS RETROATIVOS DE M-1 ATÉ M-5
---------------------------------------------------------------------------------------------------------*/

--ETAPA 2 FATURAMENTO RETROATIVOS 
DROP TABLE TMP_SQDAA_CMV_FAT_02;
CREATE TABLE TMP_SQDAA_CMV_FAT_02 COMPRESS FOR QUERY HIGH PARALLEL 256 NOLOGGING  AS
SELECT /*+ PARALLEL (32)*/
         DISTINCT B.NUM_NTC
     ,B.DW_NUM_CONTA_CLI
		 ,A.IND_IMPRIME_CONTA
		 ,B.COD_PLATAFORMA
     ,LAST_DAY(TO_DATE('31/05/2020', 'DD/MM/RRRR')) AS DT_REFERENCIA
     ,LAST_DAY(TO_DATE(TO_CHAR(B.DAT_FATURA, 'RRRRMMDD'),'RRRRMMDD')) AS DAT_FATURA
     ,TO_CHAR(TO_DATE(TO_CHAR(B.DAT_FATURA, 'RRRRMMDD'),'RRRRMMDD'),'YYYYMM') AS SAFRA_VCTO         
 		 ,1                                                 AS M_0        
 
	  FROM DWH.BI_DIM_DOC_CONTA A 
 LEFT JOIN DWH.BI_FP_RECEITA_FATURA_DET B
		ON A.DW_NUM_CONTA_CLI = B.DW_NUM_CONTA_CLI
WHERE 
	UPPER(A.COD_STS_ATU) IN ('N','O')
	AND ((A.IND_COMBO_MULTI = 'N') OR (A.IND_COMBO_MULTI IS NULL))
  AND TO_DATE(B.DAT_FATURA,'DD/MM/RRRR') BETWEEN LAST_DAY(ADD_MONTHS(TO_DATE('31/05/2020', 'DD/MM/RRRR'),-6))+1
                                                        AND  
                                                        ADD_MONTHS(LAST_DAY(TO_DATE('31/05/2020', 'DD/MM/RRRR')),-1);



                                                        
  -- TRAZER O ADD_MONTHS - 1 A PARTIR DA DATA DE REFERENCIA DA FOTOGRAFIA
---------------------------------------------------------------------------------------------------------------------
/*--------------------------------------------------------------------------------------------------------
      TERCEIRA ETAPA :  CRIACAO TABELA TEMPORÁRIA CRUZANDOS OS DADOS DA TABELA RETROATIVA COM O MÊS DE ANÁLISE
      TRANSPONDO TAMBÉM AS COLUNAS
---------------------------------------------------------------------------------------------------------*/

--ETAPA 3 03A 
DROP TABLE TMP_SQDAA_CMV_FAT_03A;
CREATE TABLE TMP_SQDAA_CMV_FAT_03A COMPRESS FOR QUERY HIGH PARALLEL 256 NOLOGGING AS 
SELECT DISTINCT
		 A.NUM_NTC
		,A.DW_NUM_CONTA_CLI
		,A.COD_PLATAFORMA
		,A.DT_REFERENCIA
		,CASE WHEN A.DAT_FATURA = ADD_MONTHS(A.DT_REFERENCIA,-1) THEN B.IND_IMPRIME_CONTA ELSE '0' END AS M_1
		,CASE WHEN A.DAT_FATURA = ADD_MONTHS(A.DT_REFERENCIA,-2) THEN B.IND_IMPRIME_CONTA ELSE '0' END AS M_2
		,CASE WHEN A.DAT_FATURA = ADD_MONTHS(A.DT_REFERENCIA,-3) THEN B.IND_IMPRIME_CONTA ELSE '0' END AS M_3
		,CASE WHEN A.DAT_FATURA = ADD_MONTHS(A.DT_REFERENCIA,-4) THEN B.IND_IMPRIME_CONTA ELSE '0' END AS M_4
		,CASE WHEN A.DAT_FATURA = ADD_MONTHS(A.DT_REFERENCIA,-5) THEN B.IND_IMPRIME_CONTA ELSE '0' END AS M_5
		,CASE WHEN B.DW_NUM_CONTA_CLI IS NULL THEN 1 ELSE 0 END AS FLG_NFAT_M0
    

FROM TMP_SQDAA_CMV_FAT_02 A 
LEFT JOIN TMP_SQDAA_CMV_FAT_01 B 
	ON A.NUM_NTC = B.NUM_NTC
	AND A.DW_NUM_CONTA_CLI = B.DW_NUM_CONTA_CLI
WHERE A.NUM_NTC NOT IN ('-3','-2','-1')
GROUP BY A.NUM_NTC
		,A.DW_NUM_CONTA_CLI
		,A.COD_PLATAFORMA
		,A.DT_REFERENCIA
    ,CASE WHEN A.DAT_FATURA = ADD_MONTHS(A.DT_REFERENCIA,-1) THEN B.IND_IMPRIME_CONTA ELSE '0' END
    ,CASE WHEN A.DAT_FATURA = ADD_MONTHS(A.DT_REFERENCIA,-2) THEN B.IND_IMPRIME_CONTA ELSE '0' END
		,CASE WHEN A.DAT_FATURA = ADD_MONTHS(A.DT_REFERENCIA,-3) THEN B.IND_IMPRIME_CONTA ELSE '0' END
		,CASE WHEN A.DAT_FATURA = ADD_MONTHS(A.DT_REFERENCIA,-4) THEN B.IND_IMPRIME_CONTA ELSE '0' END
		,CASE WHEN A.DAT_FATURA = ADD_MONTHS(A.DT_REFERENCIA,-5) THEN B.IND_IMPRIME_CONTA ELSE '0' END
		,CASE WHEN B.DW_NUM_CONTA_CLI IS NULL THEN 1 ELSE 0 END 
    ;


/*--------------------------------------------------------------------------------------------------------
QUARTA ETAPA :  CRIACAO TABELA PARA TRANSPOR E SUMARIZANDO OS DADOS, TRAZENDO O MAX TIPO DE IMPRESSA
---------------------------------------------------------------------------------------------------------*/

--ETAPA 4 03B 
/*DROP TABLE TMP_SQDAA_CMV_FAT_03B;
CREATE TABLE TMP_SQDAA_CMV_FAT_03B COMPRESS FOR QUERY HIGH PARALLEL 256 NOLOGGING AS */
SELECT DISTINCT
  
		A.DW_NUM_CONTA_CLI
    ,A.DT_REFERENCIA
    ,MAX(A.COD_PLATAFORMA) AS COD_PLATAFORMA
    ,COUNT(DISTINCT(A.NUM_NTC)) AS QT_NTC
    ,COUNT(A.DW_NUM_CONTA_CLI) AS QT_CONTA
		,MAX(M_1) AS M1_IMPRIME
    ,MAX(M_2) AS M2_IMPRIME
    ,MAX(M_3) AS M3_IMPRIME
    ,MAX(M_4) AS M4_IMPRIME
    ,MAX(M_5) AS M5_IMPRIME
    
FROM TMP_SQDAA_CMV_FAT_03A A
GROUP BY A.DW_NUM_CONTA_CLI
    ,A.DT_REFERENCIA
    

CREATE TABLE TMP_SQDAA_CMV_FAT_01 AS
SELECT /*+ PARALLEL (32)*/
         DISTINCT B.NUM_NTC
     ,B.DW_NUM_CONTA_CLI
		 ,A.IND_IMPRIME_CONTA
		 ,B.COD_PLATAFORMA
     ,LAST_DAY(TO_DATE('31/05/2020', 'DD/MM/RRRR')) AS DT_REFERENCIA
     ,LAST_DAY(TO_DATE(TO_CHAR(B.DAT_FATURA, 'RRRRMMDD'),'RRRRMMDD')) AS DAT_FATURA
     ,TO_CHAR(TO_DATE(TO_CHAR(B.DAT_FATURA, 'RRRRMMDD'),'RRRRMMDD'),'YYYYMM') AS SAFRA_VCTO         
 		 ,1                                                 AS M_0        
 
	  FROM DWH.BI_DIM_DOC_CONTA A 
 LEFT JOIN DWH.BI_FP_RECEITA_FATURA_DET B
		ON A.DW_NUM_CONTA_CLI = B.DW_NUM_CONTA_CLI
WHERE 1 = 1
	AND UPPER(A.COD_STS_ATU) IN ('N','O')
	AND (A.IND_COMBO_MULTI = 'N') ---OR (A.IND_COMBO_MULTI IS NULL))
  AND TO_DATE(B.DAT_FATURA,'DD/MM/RRRR') BETWEEN LAST_DAY(ADD_MONTHS(TO_DATE('31/05/2020', 'DD/MM/RRRR'),-1))+1
                                                        AND  
                                                        LAST_DAY(TO_DATE('31/05/2020', 'DD/MM/RRRR'))
--ALTER TABLE OWNER.NOMEDATABELA MOVE TABLESPACE NOMEDATABLESPACE parallel 32 nologging compress for query high ;
ALTER TABLE U92047747.TMP_SQDAA_CMV_FAT_01 MOVE TABLESPACE TSPRD_USER_IND_ANALISE parallel 32 nologging compress for query high ;
/


/*------------------------------------------------------------------------------------------------------------------------------------------
      INICIO DOS RESUMOS
	  
	  
	  
	  
	  TABELA 1 TMP_SQDAA_CMV_FAT_01: TRAZ OS TIPO DE IMPRESSAO EM M0 PRECISA EXPURGAR ---> NUM_NTC NOT IN ('0','-1','-2','-3') 
--------------------------------------------------------------------------------------------------------------------------------------------*/

select 
  'M_0'                               AS DSC_SAFRA
  ,safra_vcto
  ,dt_referencia
  ,cod_plataforma
  ,ind_imprime_conta
  ,COUNT(DISTINCT(DW_NUM_CONTA_CLI))  AS QT_CONTA
  ,COUNT(DISTINCT(NUM_NTC))           AS QT_CLIENTE
  ,SUM(M_0)                           AS QT_REGISTROS
FROM TMP_SQDAA_CMV_FAT_01 
  
WHERE NUM_NTC NOT IN ('0','-1','-2','-3')
GROUP BY safra_vcto
        ,dt_referencia
        ,cod_plataforma
        ,ind_imprime_conta
;

/*------------------------------------------------------------------------------------------------------------------------------------------
      TABELA 2 TMP_SQDAA_CMV_FAT_02: TRAZ OS TIPO DE IMPRESSAO RETROATIVOS EXPURGAR ---> NUM_NTC NOT IN ('0','-1','-2','-3') 
--------------------------------------------------------------------------------------------------------------------------------------------*/
select 
  
  safra_vcto
  ,dt_referencia
  ,cod_plataforma
  ,ind_imprime_conta
  ,COUNT(DISTINCT(DW_NUM_CONTA_CLI))  AS QT_CONTA
  ,COUNT(DISTINCT(NUM_NTC))           AS QT_CLIENTE
  ,SUM(M_0)                           AS QT_REGISTROS
FROM TMP_SQDAA_CMV_FAT_02 
  
WHERE NUM_NTC NOT IN ('0','-1','-2','-3')
GROUP BY safra_vcto
        ,dt_referencia
        ,cod_plataforma
        ,ind_imprime_conta
;

/*------------------------------------------------------------------------------------------------------------------------------------------
      TABELA 3 TMP_SQDAA_CMV_FAT_02: TRAZ RESUMOS DAS MOVIMENTA DO FATURAMENTO REFERENTE OS CLIENTES NÃO FATURARAM NO M~ES DE ATUAL ---> NUM_NTC NOT IN ('0','-1','-2','-3') 
--------------------------------------------------------------------------------------------------------------------------------------------*/

WITH

MOV_CONTA_ANTERIOR AS
(
SELECT DISTINCT
    A.DW_NUM_CONTA_CLI
    ,A.IND_IMPRIME_CONTA
    ,A.SAFRA_VCTO
    ,COUNT(DISTINCT(A.num_ntc)) AS QT_NTC
    ,CASE WHEN B.DW_NUM_CONTA_CLI IS NULL THEN 1 ELSE 0 END AS FLG_NFAT_M0
    ,CASE WHEN B.DW_NUM_CONTA_CLI IS NULL THEN 'S' ELSE 'N' END AS DSC_FATURADO_VCTO_MAIO

FROM TMP_SQDAA_CMV_FAT_02 A 
LEFT JOIN TMP_SQDAA_CMV_FAT_01 B 
	ON A.NUM_NTC = B.NUM_NTC
	AND A.DW_NUM_CONTA_CLI = B.DW_NUM_CONTA_CLI

WHERE A.SAFRA_VCTO = '2020/04'
  AND A.COD_PLATAFORMA NOT IN ('-3','-2','-1')

GROUP BY A.DW_NUM_CONTA_CLI
    ,A.IND_IMPRIME_CONTA
    ,A.SAFRA_VCTO
    ,CASE WHEN B.DW_NUM_CONTA_CLI IS NULL THEN 1 ELSE 0 END
    ,CASE WHEN B.DW_NUM_CONTA_CLI IS NULL THEN 'S' ELSE 'N' END
    
)
SELECT DISTINCT
  SAFRA_VCTO
  ,FLG_NFAT_M0
  ,DSC_FATURADO_VCTO_MAIO
  ,IND_IMPRIME_CONTA
  ,SUM(QT_NTC) AS QT_NTC
  ,COUNT(DISTINCT(DW_NUM_CONTA_CLI)) AS QT_CONTA
FROM MOV_CONTA_ANTERIOR

GROUP BY SAFRA_VCTO
  ,FLG_NFAT_M0
  ,DSC_FATURADO_VCTO_MAIO
  ,IND_IMPRIME_CONTA
;


WITH

MOV_CONTA_ATUAL AS
(
SELECT DISTINCT
    A.DW_NUM_CONTA_CLI
    ,A.IND_IMPRIME_CONTA
    ,A.SAFRA_VCTO
    ,COUNT(DISTINCT(A.num_ntc)) AS QT_NTC
    ,CASE WHEN B.DW_NUM_CONTA_CLI IS NULL THEN 1 ELSE 0 END AS FLG_NFAT_M0
    ,CASE WHEN B.DW_NUM_CONTA_CLI IS NULL THEN 'S' ELSE 'N' END AS DSC_FATURADO_VCTO_ABR

FROM TMP_SQDAA_CMV_FAT_01 A 
LEFT JOIN TMP_SQDAA_CMV_FAT_02 B 
	ON A.NUM_NTC = B.NUM_NTC
	AND A.DW_NUM_CONTA_CLI = B.DW_NUM_CONTA_CLI

WHERE A.COD_PLATAFORMA NOT IN ('-3','-2','-1')

GROUP BY A.DW_NUM_CONTA_CLI
    ,A.IND_IMPRIME_CONTA
    ,A.SAFRA_VCTO
    ,CASE WHEN B.DW_NUM_CONTA_CLI IS NULL THEN 1 ELSE 0 END
    ,CASE WHEN B.DW_NUM_CONTA_CLI IS NULL THEN 'S' ELSE 'N' END
    
)
SELECT DISTINCT
  SAFRA_VCTO
  ,FLG_NFAT_M0
  ,DSC_FATURADO_VCTO_ABR
  ,IND_IMPRIME_CONTA
  ,SUM(QT_NTC) AS QT_NTC
  ,COUNT(DISTINCT(DW_NUM_CONTA_CLI)) AS QT_CONTA
FROM MOV_CONTA_ATUAL

GROUP BY SAFRA_VCTO
  ,FLG_NFAT_M0
  ,DSC_FATURADO_VCTO_ABR
  ,IND_IMPRIME_CONTA
;



select /*+PARALLEL (30)*/  
--    CLI.NUM_CPF
--    ,CMV.NUM_NTC
--    ,FAT.NUM_CONTA_CLI
   CR.NM_MOTIVO_URA
   ,CR.NM_AGRUPAMENTO_PLATAFORMA 
   ,FAT.FLG_FATURA_DIGITAL
   ,FAT.FLG_DEBITO_AUTOMATICO
   ,SUM(CR.QT_LIGACAO_REAL) AS QT_LIGACAO_REAL
   ,SUM(CR.QT_LIGACOES_RATEIO) AS QT_LIGACOES_RATEIO                   --- total de ligações com rateio validação com IN

FROM DWH.BI_DIM_CLIENTE CLI 
LEFT JOIN OPS_ALTERYX.BI_FP_BASE_ASSINANTE_CMV CMV
     ON CMV.DW_NUM_CLIENTE = CLI.DW_NUM_CLIENTE
      
LEFT JOIN OPS_ALTERYX.BI_FP_FATURA_CMV FAT
     ON FAT.DW_NUM_CLIENTE = CMV.DW_NUM_CLIENTE
    AND FAT.DAT_MOVIMENTO =  CMV.DAT_MOVIMENTO

LEFT JOIN U92277452.FT_SQD_AA_CR_04 CR               --- U92277452.FT_SQD_AA_CR_AUTOC
     ON CR.NUM_NTC = CMV.NUM_NTC
          
     where CMV.DAT_MOVIMENTO = TO_DATE('01/02/2019','DD/MM/YYYY') --- base inicial do mês
       --AND CMV.COD_PLATAFORMA = 'AUTOC'                           --- base Claro Controle
       AND FAT.DAT_MOVIMENTO = TO_DATE('01/02/2019','DD/MM/YYYY') --- base inicial do mês
       AND CR.DT_INICIO_LIGACAO BETWEEN 20190201 AND 20190228     --- período de ligações
       AND CR.FC_DIRECIONADO_RETIDO = 'Direcionado Humano'
GROUP BY 
   CR.NM_MOTIVO_URA
   ,CR.NM_AGRUPAMENTO_PLATAFORMA 
   ,FAT.FLG_FATURA_DIGITAL
   ,FAT.FLG_DEBITO_AUTOMATICO
;































/* -------------------------------------------------------------------------------------------SEGUINTES ETAPAS DO MODELO COMPORTAMENTO MÓVEL*/



/*--------------------------------------------------------------------------------------------------------
QUINTA ETAPA :  CRIACAO TABELA TEMPORÁRIA COM A UNIAO DOS DADOS REFERENTE A M_0 E HISTORICO
---------------------------------------------------------------------------------------------------------*/
--ETAPA 5 - UNION ALL SUMARIZADAS
DROP TABLE TMP_SQD_AA_BASE_CAD_CMV_04a;
CREATE TABLE TMP_SQD_AA_BASE_CAD_CMV_04a COMPRESS FOR QUERY HIGH PARALLEL 256 NOLOGGING AS 

SELECT 
       NUM_NTC
       ,DT_REFERENCIA
       ,DT_ACESSO
       ,M_0
       ,M_1
       ,M_2
       ,M_3
       ,M_4
       ,M_5
 

FROM TMP_SQD_AA_BASE_CAD_CMV_03B 
-- WHERE NUM_NTC = '11980299093' -- NTC_WAGNER
-- WHERE NUM_NTC ='11920015565'

UNION ALL

SELECT 
       NUM_NTC
      ,DT_REFERENCIA
      ,DT_ACESSO
      ,M_0
      ,0 AS M_1
      ,0 AS M_2
      ,0 AS M_3
      ,0 AS M_4
      ,0 AS M_5
                  
FROM TMP_SQD_AA_BASE_CAD_CMV_01 
-- WHERE NUM_NTC = '11980299093' -- NTC_WAGNER 
-- WHERE NUM_NTC ='11920015565'
;


/*--------------------------------------------------------------------------------------------------------
SEXTA ETAPA :  CRIACAO TABELA TEMPORÁRIA COM AS AGREGAÇÕES
---------------------------------------------------------------------------------------------------------*/
--ETAPA 6 AGG
DROP TABLE TMP_SQD_AA_BASE_CAD_CMV_04;
CREATE TABLE TMP_SQD_AA_BASE_CAD_CMV_04 COMPRESS FOR QUERY HIGH PARALLEL 256 NOLOGGING AS 

SELECT 
      NUM_NTC
      ,DT_REFERENCIA
      ,MAX(DT_ACESSO) AS DT_ACESSO
      ,SUM(M_0)       AS M_0
      ,SUM(M_1)       AS M_1
      ,SUM(M_2)       AS M_2
      ,SUM(M_3)       AS M_3
      ,SUM(M_4)       AS M_4
      ,SUM(M_5)       AS M_5
      ,SUM(M_0+M_1+M_2+M_3+M_4+M_5) AS FLG_NOVO
 

FROM TMP_SQD_AA_BASE_CAD_CMV_04a
GROUP BY  NUM_NTC
      ,DT_REFERENCIA
;
----------------------------------------------------------------------------------------
/*--------------------------------------------------------------------------------------------------------
SETIMA ETAPA :  CRIACAO TABELA TEMPORÁRIA COM A CLASSIFICAÇÃO DOS NTCS
---------------------------------------------------------------------------------------------------------*/

-- ETAPA 7 CLASSIFICAÇÃO DOS NTCS
DROP TABLE TMP_SQD_AA_BASE_CAD_CMV_05;
CREATE TABLE TMP_SQD_AA_BASE_CAD_CMV_05 COMPRESS FOR QUERY HIGH PARALLEL 256 NOLOGGING AS 

SELECT 

       NUM_NTC
       ,DT_REFERENCIA
       ,DT_ACESSO
       ,M_0
       ,M_1
       ,M_2
       ,M_3
       ,M_4
       ,M_5
       ,FLG_NOVO
       ,CASE 
             WHEN M_0 = 1 AND FLG_NOVO = 1 THEN 'NOVO'
             WHEN M_0 = 1 AND FLG_NOVO > 1  THEN 'ACESSOU - ' || TO_CHAR(FLG_NOVO) 

       /* REGRA ABANDONADOR*/ 
             WHEN M_0 = 0 AND M_1 = 1 THEN      'ABANDONADOR -1' 
             WHEN M_0 = 0 AND M_1 = 0 AND M_2 = 1  THEN      'ABANDONADOR -2'
             WHEN M_0 = 0 AND M_1 = 0 AND M_2 = 0 AND M_3 = 1  THEN      'ABANDONADOR -3'
             WHEN M_0 = 0 AND M_1 = 0 AND M_2 = 0 AND M_3 = 0 AND M_4 = 1 THEN      'ABANDONADOR -4'
             WHEN M_0 = 0 AND M_1 = 0 AND M_2 = 0 AND M_3 = 0 AND M_4 = 0 AND M_5 = 1 THEN      'ABANDONADOR -5'
              
       --      WHEN M_4 = 0 AND M_3 = 0 AND M_2 = 0 AND M_1 = 1 AND M_0 = 1 THEN      'RECORRENTE -1'
       --      WHEN M_4 = 0 AND M_3 = 0 AND M_2 = 1 AND M_1 = 1 AND M_0 = 1 THEN      'RECORRENTE -2'
       --      WHEN M_4 = 0 AND M_3 = 1 AND M_2 = 1 AND M_1 = 1 AND M_0 = 1 THEN      'RECORRENTE -3'
       --      WHEN M_4 = 1 AND M_3 = 1 AND M_2 = 1 AND M_1 = 1 AND M_0 = 1 THEN      'RECORRENTE -4'
           --  WHEN M_5 = 1 AND M_4 = 1 AND M_3 = 1 AND M_2 = 1 AND M_1 = 1 AND M_0 = 1 THEN      'RECORRENTE -5'
             ELSE 'OCASIONAL'         
        END AS STS_ACESSO

FROM TMP_SQD_AA_BASE_CAD_CMV_04 ;


/*--===============================================================================================================
                        CRIAÇÃO / INSERT TABELA FINAL DTL
TABELAS:                        
--    BUS_SQD_AA_BASE_CAD_CMV_DTL
---U92277452.BUS_SQD_AA_BASE_CAD_CMV_AGG (RETIDO DIGITAL)
---U92277452.BUS_SQD_AA_BASE_CAD_CMV_DTL (RETIDO DIGITAL)

--TIME PROCESSAMENTO 3743,759 SECONDS
--===============================================================================================================*/
--ETAPA 8 - FINAL DTL
--DROP TABLE BUS_SQD_AA_BASE_CAD_CMV_DTL;
--CREATE TABLE BUS_SQD_AA_BASE_CAD_CMV_DTL COMPRESS FOR QUERY HIGH PARALLEL 256 NOLOGGING AS 
INSERT /*+APPEND */ INTO BUS_SQD_AA_BASE_CAD_CMV_DTL
SELECT 
   DT_REFERENCIA
   ,'CMV'        AS DSC_MARCA
   ,NUM_NTC
   ,DT_ACESSO
   ,M_0
   ,M_1
   ,M_2
   ,M_3
   ,M_4
   ,M_5   
   ,FLG_NOVO
   ,STS_ACESSO
   
FROM TMP_SQD_AA_BASE_CAD_CMV_05;